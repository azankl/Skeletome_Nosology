---
title: "SkeletalG2P"
format: html
editor: visual
---

## Skeletal G2P

In this project I am trying to combine the data from the 2023 ISDS Nosology with the DDG2P project.

Steps required:

Step 1: Get the 2023 ISDS Nosology into R using rvest.

The 2023 Nosology is published in the AJMG here: https://onlinelibrary.wiley.com/doi/10.1002/ajmg.a.63132

I could not read from this URL directly using `read_html`, probably because of some paywall issue. I therefore opened the URL in Chrome, and saved the page as "AJMG.html" using Chrome \> File \> Save Page As... with Format "Web Page, HTML Only".

I then opened `AJMG.html` with Chrome and used the [rvest SelectorGadget](https://rvest.tidyverse.org/articles/selectorgadget.html) to identify the selector for the table (which turned out to be called `".article-section__table"`).

I then extracted the table from AJMG.html with the code below.

Note that some quotation marks in the Notes column got garbled. Probably not worth fixing as they are just Notes, but need to check nothing else got garbled.

::: callout-note
Selecting the xpath as described [here](https://www.r-bloggers.com/2015/01/using-rvest-to-scrape-an-html-table/) also works, but some of the code in the blog post does not work, must be an older version of rvest.
:::

```{r}
library(tidyverse)
library(here)
library(rvest)
AJMG_table<- read_html (here("AJMG.html")) %>%
  html_element(".article-section__table") %>%
  html_table()

```

Step 2: add ISDS Group-Number and Group-Name as extra columns to each disease and then remove the Group headings

```{r}
#this regex pattern matches rows that start with "Group", followed by whitespace and a number, and captures this number
pattern <- "Group\\s([1-9]+)"
#extract rows where Group Number/Disorder Number column matches this pattern
grouphits<- str_match(unlist(AJMG_table[,1]), pattern)
colnames(grouphits)<-c("Match","GroupNumber")
#add new column to AJMG_table with group number                      
AJMG_table <- add_column(AJMG_table,ISDS_Group_No = grouphits[,'GroupNumber'])
#add new column for ISDS_Group_Name (empty for now)
AJMG_table <- add_column(AJMG_table, ISDS_Group_Name = NA)
#rows that did not match the group pattern above (ie. are disease rows) will have NA in ISDS_Group_No
#fill those rows with the group number extracted previously and
#fill ISDS_Group_Name with Names from 'Name of Group/Disorder'
for (i in seq_along(unlist(AJMG_table[,"ISDS_Group_No"]))) {
  groupNumber = ifelse(!is.na(AJMG_table[i,"ISDS_Group_No"]), AJMG_table[i,"ISDS_Group_No"], groupNumber)
  groupName = ifelse(!is.na(AJMG_table[i,"ISDS_Group_No"]), AJMG_table[i,2], groupName)
  AJMG_table[i,c("ISDS_Group_No","ISDS_Group_Name")] = c(groupNumber,groupName)
}
#now some clean up:
#remove rows that match the 'Group' finding pattern above
AJMG_table <- AJMG_table %>%
  filter(str_detect(unlist(AJMG_table[,1]), pattern, negate = TRUE))
```
